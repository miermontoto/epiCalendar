{"version":3,"sources":["components/UI/Modal.module.css","components/Settings/Saver.module.css","components/Settings/Settings.module.css","components/Settings/Options.module.css","components/Settings/Checkboxes.module.css","hooks/use-input.js","store/settings-context.js","components/Form/MsalButton.js","components/Form/Form.js","components/UI/Modal.js","components/Settings/Checkboxes.js","components/Settings/Options.js","components/Settings/Saver.js","components/Settings/Settings.js","components/UI/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","backdrop","center","modal","slide-down","form","extension","invalid","error","saveas","total","overall","checkboxes","buttons","options","cajitas","separation","useInput","validateValue","_useState","useState","_useState2","Object","slicedToArray","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","trim","length","reset","SettingsContext","createContext","saveNameHandler","name","parse","parseHandler","state","classParsing","classParsingHandler","links","linksHandler","update","updateHandler","extensionHandler","SettingsProvider","props","setSaveas","setUpdate","_useState5","_useState6","isCheckedParsing","setIsCheckedParsing","_useState7","_useState8","isClassParsing","setIsClassParsing","_useState9","_useState10","isLinks","setIsLinks","_useState11","_useState12","setExtension","react_default","a","createElement","Provider","children","MsalButton","className","id","Form","ctx","React","useContext","_useInput","charAt","enteredCode","codeIsValid","codeHasError","codeChangeHandler","codeBlurHandler","codeReset","formIsValid","formSubmissionHandler","preventDefault","document","getElementById","submit","console","log","idButton","useEffect","cookiesButton","signInButton","container","addEventListener","classList","add","remove","Fragment","method","onSubmit","type","required","onChange","onBlur","href","rel","disabled","onClick","action","MsalButton_MsalButton","onShowSettings","Backdrop","classes","onClose","ModalOverlay","portalElement","Modal","react","ReactDOM","createPortal","Modal_Backdrop","Modal_ModalOverlay","Checkboxes","checked","htmlFor","Options","Settings_Checkboxes","university","Saver","enteredName","nameChangeHandler","nameBlurHandler","onSave","placeholder","Settings","UI_Modal","Settings_Saver","Settings_Options","onCheck","check","Footer","App","showSettings","setShowSettings","components_Settings_Settings","Form_Form_Form","Footer_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode","settings_context_SettingsProvider","src_App"],"mappings":"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","file":"static/js/main.e9c1f913.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2TEft\",\"center\":\"Modal_center__3EcRR\",\"modal\":\"Modal_modal__2Vs3-\",\"slide-down\":\"Modal_slide-down__2kcor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Saver_form__3Wbqv\",\"extension\":\"Saver_extension__25b5g\",\"invalid\":\"Saver_invalid__4hM6-\",\"error\":\"Saver_error__sNSpp\",\"saveas\":\"Saver_saveas__2h607\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Settings_form__jUy8v\",\"total\":\"Settings_total__ciSFp\",\"overall\":\"Settings_overall__3bFKM\",\"checkboxes\":\"Settings_checkboxes__13SHL\",\"buttons\":\"Settings_buttons__uFsu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__3UwTo\",\"cajitas\":\"Options_cajitas__3bxOO\",\"separation\":\"Options_separation__1pQ8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overall\":\"Checkboxes_overall__JrJgo\"};","import { useState } from \"react\";\n\n// Custom hook to use the input\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\"); // State for the entered input value\n  const [isTouched, setIsTouched] = useState(false); // State to check if the input has been touched\n\n  const valueIsValid = validateValue(enteredValue); // Check if the input value is valid through the validateValue function\n  const hasError = !valueIsValid && isTouched; // Check if the input has an error (if it is not valid and it has been touched)\n\n  // Function to update the enteredValue of the input\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  // Function to update the isTouched state of the input\n  const inputBlurHandler = () => {\n    if (enteredValue.trim().length === 0) {\n      setIsTouched(false);\n    } else {\n      setIsTouched(true);\n    }\n  };\n\n  // Reset for the enteredValue and isTouched state\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import { parse } from \"nth-check\";\nimport React, { createContext, useEffect, useState } from \"react\";\n\n// Default values for the context\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\n// Context for the settings of the app (better autocomplete)\nconst SettingsContext = createContext({\n\n  saveNameHandler: (name) => { },\n  saveas: \"\",\n  parse: true,\n  parseHandler: (state) => { },\n  classParsing: true,\n  classParsingHandler: (state) => { },\n  links: true,\n  linksHandler: (state) => { },\n  update: false,\n  updateHandler: (state) => { },\n  extension: \".ics\",\n  extensionHandler: (extension) => { },\n});\n\nexport const SettingsProvider = (props) => {\n  const [saveas, setSaveas] = useState(\"Calendario\"); // State for the filename\n\n  // States for checkboxes\n  const [update, setUpdate] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n  const [isLinks, setIsLinks] = useState(true);\n\n  // State for the extension of the file\n  const [extension, setExtension] = useState(\".ics\");\n\n  // Function to set the filename state\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  // Functions to set the checkboxes state\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n  const classParsingHandler = (state) => {\n    setIsClassParsing(state);\n  };\n  const linksHandler = (state) => {\n    setIsLinks(state);\n  }\n\n  // Function to set the update state\n  const updateHandler = (state) => {\n    setUpdate(state);\n  };\n\n  // Function to set the extension state\n  const extensionHandler = (extension) => {\n    setExtension(extension);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        // check: checkHandler,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        parseHandler: parseHandler,\n        parse: isCheckedParsing,\n        classParsing: isClassParsing,\n        classParsingHandler: classParsingHandler,\n        links: isLinks,\n        linksHandler: linksHandler,\n        update: update,\n        updateHandler: updateHandler,\n        extension: extension,\n        extensionHandler: extensionHandler,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import React from \"react\";\r\n\r\nimport \"./MsalButton.css\";\r\n\r\nexport const MsalButton = () => {\r\n    return (\r\n        <div className=\"msal-button\">\r\n            <button id=\"msal-but\">\r\n                <div className=\"inline\">\r\n                    <i className=\"btn-microsoft\"></i>Sign in\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};","import React, { useEffect } from 'react';\nimport './Form.css';\n\nimport useInput from \"../../hooks/use-input\";\nimport SettingsContext from \"../../store/settings-context\";\n\nimport { MsalButton } from './MsalButton';\n\nimport {\n    DEFAULT_FILENAME,\n    // DEFAULT_UNIVERSITY,\n} from \"../../store/settings-context\";\n\nexport const Form = (props) => {\n    // Access the settings context\n    const ctx = React.useContext(SettingsContext);\n\n    const {\n        value: enteredCode,\n        isValid: codeIsValid,\n        hasError: codeHasError,\n        valueChangeHandler: codeChangeHandler,\n        inputBlurHandler: codeBlurHandler,\n        reset: codeReset,\n    } = useInput(\n        (value) =>\n            value.length === 37 &&\n            value.charAt(0) === \"0\" &&\n            value.charAt(1) === \"0\" &&\n            value.charAt(2) === \"0\" &&\n            value.charAt(3) === \"0\" &&\n            value.charAt(27) === \":\" &&\n            value.charAt(28) === \"1\" &&\n            value.charAt(29) === \"d\"\n    );\n\n    // Variable for the validity of the form\n    let formIsValid = codeIsValid;\n\n    const formSubmissionHandler = (event) => {\n        event.preventDefault();\n        if (!codeIsValid) {\n            console.log(\"Code is not valid\");\n            return;\n        }\n\n        document.getElementById(\"form\").submit();\n        ctx.saveNameHandler(DEFAULT_FILENAME);\n        // ctx.check(DEFAULT_UNIVERSITY);\n        codeReset();\n    };\n\n    // const idButton = `\"form-container cookies\" ${codeHasError ? \" invalid\" : \"\"}`;\n    // console.log(idButton);\n    const idButton = \"form-container cookies\" + (codeHasError ? \" invalid\" : \"\");\n    console.log(formIsValid);\n\n    useEffect(() => {\n        const cookiesButton = document.getElementById('cookies-sign');\n        const signInButton = document.getElementById('signIn');\n        const container = document.getElementById('container');\n\n        signInButton.addEventListener('click', () => {\n            container.classList.add(\"right-panel-active\");\n        });\n\n        cookiesButton.addEventListener('click', () => {\n            container.classList.remove(\"right-panel-active\");\n        });\n    }, []);\n\n\n    return (<>\n        <h1 id=\"title\">autoUniCalendar: Descarga tu calendario de Uniovi.</h1>\n        <div id=\"container\" className=\"container\">\n            {/* <div className=\"form-container cookies\"> */}\n            <div className={idButton} >\n                <form id=\"form\" method=\"post\" onSubmit={formSubmissionHandler}>\n                    <h1>Cookies</h1>\n                    <span id=\"cookies-span\">Introduce tu cookie de sesión.</span>\n                    <div className=\"floating-input\">\n                        <label>\n                            <input type=\"text\" name=\"jsessionid\" id=\"jsessionid\" required onChange={codeChangeHandler}\n                                onBlur={codeBlurHandler}\n                                value={enteredCode} />\n                            <span className=\"floating-label\">JSession</span>\n                        </label>\n                    </div>\n                    <a href=\"https://bimo99b9.github.io/scripts-autounicalendar/#\" target=\"_blank\" rel=\"noopener noreferrer\">¿Necesitas ayuda?</a>\n                    <button disabled={!formIsValid} onClick={formSubmissionHandler}>DESCARGAR</button>\n                    <div>\n                        <input type=\"hidden\" name=\"filename\" value={ctx.saveas} />\n                    </div>\n                    <div>\n                        <input type=\"hidden\" name=\"location\" value={ctx.parse} />\n                    </div>\n                    <div>\n                        <input type=\"hidden\" name=\"class-type\" value={ctx.classParsing} />\n                    </div>\n                    <div>\n                        <input type=\"hidden\" name=\"links\" value={ctx.links} />\n                    </div>\n                    <div>\n                        <input type=\"hidden\" name=\"extension\" value={ctx.extension} />\n                    </div>\n                </form>\n            </div>\n            <div className=\"form-container signin\">\n                <form action=\"\">\n                    <h1>Descargar usando credenciales</h1>\n                    <p> Usa tus credenciales para tramitar la solicitud y descargar el calendario.</p>\n                    {/* <button disabled=\"\">Sign in</button> */}\n                    <MsalButton />\n                </form>\n            </div>\n            <div className=\"overlay-container\">\n                <div className=\"overlay\">\n                    <div className=\"overlay-panel overlay-left\">\n                        <h1>Descargar usando cookie.</h1>\n                        <p>Puedes descargar el calendario usando una cookie de sesión, haciendo click aquí.</p>\n                        <button id=\"cookies-sign\" className=\"ghost\">Usar cookie</button>\n                    </div>\n                    <div className=\"overlay-panel overlay-right\">\n                        <h1>Descargar usando credenciales.</h1>\n                        <p>\n                            Si lo prefieres, puedes usar tus credenciales en lugar de tus cookies de sesión para descargar el calendario.\n                        </p>\n                        <button id=\"signIn\" className=\"ghost\" >Usar crendeciales</button>\n                    </div>\n                </div>\n            </div>\n        </div >\n        <div className=\"settings-button\">\n            <button onClick={props.onShowSettings}>Opciones</button>\n        </div>\n    </>);\n};","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\n// Modal backdrop\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\n// Modal overlay which contains the modal\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.center}>\n      <div className={classes.modal}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\n// Get the overlays element from the public/index.html file\nconst portalElement = document.getElementById(\"modal\");\n\n// Modal component which contains the backdrop and the modal overlay\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component that represents the 3 checkboxes\nconst Checkboxes = () => {\n  // Access the settings context\n  const ctx = useContext(SettingsContext);\n\n  // Function that handles the checkbox change for location\n  const parseHandler = () => {\n    ctx.parseHandler(!ctx.parse);\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change for class type\n  const classParsingHandler = () => {\n    ctx.classParsingHandler(!ctx.classParsing);\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change for links\n  const linksHandler = () => {\n    ctx.linksHandler(!ctx.links);\n    ctx.updateHandler(true);\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          // checked={parse.parse}\n          checked={ctx.parse}\n          onChange={parseHandler}\n        />\n        <label htmlFor=\"location-parsing\">Filtrado de nombres de aulas (solo EPI Gijón)</label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          // checked={classParse.classParsing}\n          checked={ctx.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Filtrado de tipo de clases</label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"links\"\n          // checked={classParse.classParsing}\n          checked={ctx.links}\n          onChange={linksHandler}\n        />\n        <label htmlFor=\"links\">Añadir enlaces de ubicación en la descripción</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n","import React from \"react\";\nimport Checkboxes from \"./Checkboxes\";\n\nimport classes from \"./Options.module.css\";\n\n// General component for the radio buttons and checkboxes\nconst Options = (props) => {\n  return (\n    <React.Fragment>\n      <div className={classes.options}>\n        <h3>Opciones</h3>\n      </div>\n      <div className={classes.cajitas}>\n        <Checkboxes university={props.university} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\n\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component to set the name of the filename\nconst Saver = (props) => {\n  // Access the settings context\n  const ctx = React.useContext(SettingsContext);\n\n  // useInput hook to get the name of filename\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.length > 0);\n\n  // Function to set the name of the file\n  const nameHandlerValue = (name) => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      // console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  const handleExtensionChange = (event) => {\n    ctx.extensionHandler(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.saveas}>\n        <h3>Guardar como</h3>\n      </div>\n      <div className={classes.form}>\n        <input\n          type=\"text\"\n          id=\"saveAs\"\n          name=\"filename\"\n          onChange={nameHandlerValue}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          placeholder=\"Calendario\"\n        />\n        <div className={classes.extension}>\n          <select value={ctx.extension} onChange={handleExtensionChange}>\n            <option value=\".ics\">.ics</option>\n            <option value=\".csv\">.csv</option>\n          </select>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Saver;\n","import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport Options from \"./Options\";\nimport Saver from \"./Saver\";\nimport classes from \"./Settings.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Settings component which contains the modal and the options\nconst Settings = (props) => {\n  // Context to access the settings state\n  const ctx = React.useContext(SettingsContext);\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className={classes.overall}>\n        <Saver onSave={ctx.saveNameHandler} />\n        <Options onCheck={ctx.check} university={ctx.university} />\n        <div className={classes.buttons}>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            Cerrar\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\n/*\n<button className={classes.button}>\n  <span></span>\n  <span></span>\n  <span></span>\n  <span></span>\n  🇪🇸/🇬🇧\n</button>\n*/\n\nexport default Settings;\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport const Footer = () => {\r\n    return <footer>\r\n        <p>Created with love by\r\n            <a id=\"links\" href=\"https://bimo99b9.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\"> Daniel López Gala</a>,\r\n            <a id=\"links\" href=\"https://github.com/miermontoto\" target=\"_blank\" rel=\"noopener noreferrer\"> Juan Francisco Mier Montoto</a> and\r\n            <a id=\"links\" href=\"https://github.com/JonathanAriass\" target=\"_blank\" rel=\"noopener noreferrer\"> Jonathan Arias Busto</a>. v1.1\r\n        </p>\r\n    </footer>\r\n};","import React, { useState } from 'react';\nimport './App.css';\nimport { Form } from './components/Form/Form';\nimport Settings from \"./components/Settings/Settings\";\nimport { Footer } from './components/UI/Footer';\n\nfunction App() {\n  // State for the modal window to be open or closed\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Function to toggle (show) the modal window\n  const showSettingsHandler = () => {\n    setShowSettings(true);\n  };\n\n  // Function to toggle (hide) the modal window\n  const hideSettingsHandler = () => {\n    setShowSettings(false);\n  };\n\n  return (\n    <div className=\"group\">\n      {/* <h1 id=\"title\">autoUniCalendar: Descarga tu calendario de Uniovi.</h1> */}\n      {/* <br /> */}\n      {showSettings && <Settings onClose={hideSettingsHandler} />}\n      <Form onShowSettings={showSettingsHandler} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SettingsProvider } from \"./store/settings-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <SettingsProvider>\n      <App />\n    </SettingsProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}